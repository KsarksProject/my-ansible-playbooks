- name: Create Virtual Machine on Proxmox
  hosts: 172.28.0.251
  vars:
    proxmox_host: "172.28.0.251"
    proxmox_user: "root@pam"
    proxmox_password: "{{ lookup('env', 'PROXMOX_PASSWORD') }}"
    proxmox_node: "pve-in"
    vm_name: "new-vm"  # Имя виртуальной машины
    cores: 2
    memory: 2048  # Размер оперативной памяти в МБ
    disk_size: "20G"  # Размер диска
    storage: "srv-bs2"  # Хранилище для диска и ISO
    iso_path: "srv-bs2:iso/ubuntu-22.04.4-live-server-amd64.iso"  # Путь к ISO-образу в хранилище
    bridge: "vmbr1"  # Сетевой мост
    ansible_python_interpreter: /usr/bin/python3.11

  tasks:
    - name: Install necessary packages via apt
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-setuptools
          - python3-venv
        state: present
      become: yes

    - name: Create virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /opt/venv
      args:
        creates: /opt/venv

    - name: Install necessary Python modules
      ansible.builtin.command:
        cmd: /opt/venv/bin/pip install requests proxmoxer
      args:
        creates: /opt/venv/bin/proxmoxer

    - name: Create a new virtual machine with auto-assigned VMID
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_password: "{{ proxmox_password }}"
        node: "{{ proxmox_node }}"
        name: "{{ vm_name }}"
        cores: "{{ cores }}"
        memory: "{{ memory }}"
        net: "model=virtio,bridge={{ bridge }}"
        scsihw: "virtio-scsi-pci"
        boot: "order=scsi0;ide2;net0"
        ide2: "{{ iso_path }},media=cdrom"
        onboot: true
        state: present

    - name: Add a virtual disk
      shell: >
        qm set $(pvesh get /cluster/nextid) --scsi0 {{ storage }}:{{ disk_size }}
      args:
        warn: false

    - name: Start the virtual machine
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_host }}"
        api_user: "{{ proxmox_user }}"
        api_password: "{{ proxmox_password }}"
        node: "{{ proxmox_node }}"
        vmid: "$(pvesh get /cluster/nextid)"
        state: started

    - name: Output created VM details
      debug:
        msg: "VM {{ vm_name }} created and started successfully."
