---
- name: Create VM from Proxmox Template
  hosts: 172.28.0.251
  vars:
    ansible_python_interpreter: /opt/venv/bin/python
  tasks:
    - name: Install necessary packages via apt
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-setuptools
          - python3-venv
        state: present
      become: yes

    - name: Create virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /opt/venv
      args:
        creates: /opt/venv

    - name: Install requests module in virtual environment
      ansible.builtin.command:
        cmd: /opt/venv/bin/pip install requests

    - name: Install proxmoxer module in virtual environment
      ansible.builtin.command:
        cmd: /opt/venv/bin/pip install proxmoxer

    - name: Clone Proxmox template
      community.general.proxmox_kvm:
        node: pve-in
        api_user: "root@pam"
        api_password: "{{ proxmox_pass }}"
        api_host: 172.28.0.251
        api_port: 8006
        validate_certs: false
        storage: "local-lvm"
        full: true
        clone: "CloneTemplate"
        name: "{{ vm_name }}"

    - name: Wait for 180 seconds
      ansible.builtin.pause:
        seconds: 180

    - name: Start VM
      community.general.proxmox_kvm:
        node: pve-in
        api_user: "root@pam"
        api_password: "{{ proxmox_pass }}"
        api_host: 172.28.0.251
        api_port: 8006
        name: "{{ vm_name }}"
        state: started

    - name: Wait for 30 seconds
      ansible.builtin.pause:
        seconds: 30

- name: Set VM IP and Hostname
  hosts: 172.28.1.200
  tasks:
    - name: Update IP and network configuration (Netplan)
      ansible.builtin.template:
        src: netplan_template.yaml.j2
        dest: /etc/netplan/01-netcfg.yaml
        backup: yes

    - name: Apply Netplan configuration
      ansible.builtin.command: "netplan apply"

    - name: Update Hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}.cvd.local"

    - name: Reboot
      ansible.builtin.reboot:
        reboot_timeout: 300
      become: yes

    - name: Pause for 30 seconds to wait for reboot
      ansible.builtin.pause:
        seconds: 30
