---
- name: Create VM from Proxmox Template
  hosts: proxmox
  become: yes
  vars:
    ansible_python_interpreter: /opt/venv/bin/python
  tasks:
    - name: Install necessary packages via apt
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-setuptools
          - python3-venv
        state: present

    - name: Create virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /opt/venv
      args:
        creates: /opt/venv

    - name: Install requests module in virtual environment
      ansible.builtin.command:
        cmd: /opt/venv/bin/pip install requests
      environment:
        VIRTUAL_ENV: /opt/venv
        PATH: /opt/venv/bin:{{ ansible_env.PATH }}

    - name: Install proxmoxer module in virtual environment
      ansible.builtin.command:
        cmd: /opt/venv/bin/pip install proxmoxer
      environment:
        VIRTUAL_ENV: /opt/venv
        PATH: /opt/venv/bin:{{ ansible_env.PATH }}

    - name: Check if VM already exists
      community.general.proxmox_kvm:
        node: pve-in
        api_user: "root@pam"
        api_password: "{{ proxmox_pass }}"
        api_host: 172.28.0.251
        api_port: 8006
        validate_certs: false
        name: "{{ vm_name }}"
      register: vm_exists
      failed_when: false

    - name: Clone Proxmox template
      community.general.proxmox_kvm:
        node: pve-in
        api_user: "root@pam"
        api_password: "{{ proxmox_pass }}"
        api_host: 172.28.0.251
        api_port: 8006
        validate_certs: false
        storage: "local-lvm"
        full: true
        clone: "SRVCVDUBUNTU"
        name: "{{ vm_name }}"
        timeout: 300
        state: present
        startup: yes
      when: "'msg' in vm_exists and 'does not exist' in vm_exists.msg"
      register: clone_result

    - name: Wait for VM to appear in Proxmox
      ansible.builtin.wait_for:
        path: "/var/lib/vz/images/{{ clone_result.id }}/vm-{{ clone_result.id }}.conf"
        delay: 15
        retries: 10

    - name: Gather facts about VM
      ansible.builtin.setup:
        gather_subset:
          - network

    - name: Debug IPv4 address of the VM
      ansible.builtin.debug:
        msg: "VM Primary IPv4 Address: {{ ansible_default_ipv4.address }}"