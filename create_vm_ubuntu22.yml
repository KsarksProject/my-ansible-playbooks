---
- name: Create VM from Proxmox Template
  hosts: proxmox
  vars:
    ansible_python_interpreter: /opt/venv/bin/python
  tasks:
    - name: Install necessary packages via apt
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-setuptools
          - python3-venv
        state: present
      become: yes

    - name: Create virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /opt/venv
      args:
        creates: /opt/venv

    - name: Install requests module in virtual environment
      ansible.builtin.command:
        cmd: /opt/venv/bin/pip install requests

    - name: Install proxmoxer module in virtual environment
      ansible.builtin.command:
        cmd: /opt/venv/bin/pip install proxmoxer

    - name: Clone Proxmox template
      community.general.proxmox_kvm:
        node: pve-in
        api_user: "root@pam"
        api_password: "{{ proxmox_pass }}"
        api_host: 172.28.0.251
        api_port: 8006
        validate_certs: false
        storage: "local-lvm"
        full: true
        clone: "SRVCVDUBUNTU"
        name: "{{ vm_name }}"
        timeout: 300
        startup: yes
      register: clone_result

    - name: Wait for VM to appear in Proxmox
      retries: 10
      delay: 15
      community.general.proxmox_kvm:
        node: pve-in
        api_user: "root@pam"
        api_password: "{{ proxmox_pass }}"
        api_host: 172.28.0.251
        api_port: 8006
        validate_certs: false
        name: "{{ vm_name }}"
      register: vm_ready
      until: vm_ready is not failed

    - name: Gather facts about VM
      ansible.builtin.setup:
        gather_subset:
          - network

    - name: Debug IPv4 addresses
      debug:
        msg: "VM IPv4 Addresses: {{ ansible_all_ipv4_addresses }}"
